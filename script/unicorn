#!/bin/bash
set -e

### BEGIN INIT INFO
# Provides: unicorn
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start daemon at boot time
# Description: Enable service provided by daemon.
### END INIT INFO

app_root=/var/web/mushroom-observer
pid_file=$app_root/tmp/unicorn.pid
conf_file=$app_root/config/unicorn.rb

case "$1" in

# ----------------------------------------------
#  Start server as user mo in production mode.
# ----------------------------------------------

start)
  if [ -s $pid_file ]; then
    echo "Unicorn already running."
    exit 1
  else
    echo "Starting unicorn..."
    cd $app_root
    rvm_env=$(ls /usr/local/rvm/environments/ruby-1.9.3-p* | grep -v @ | tail -1)
    start_cmd="source $rvm_env && bundle exec unicorn_rails -c $conf_file -D"
    case `whoami` in
    mo)
      RAILS_ENV=production bash -c "$start_cmd" && exit 0
      echo "FAILED!"
      exit 1
      ;;
    root)
      sudo RAILS_ENV=production -u mo bash -c "$start_cmd" && exit 0
      echo "FAILED!"
      exit 1
      ;;
    *)
      echo "Must be root or mo to start unicorn!"
      exit 1
    esac
  fi
  ;;

# ----------------------------
#  Stop server.
# ----------------------------

stop)
  if [ ! -s $pid_file ]; then
    echo "Unicorn not running."
    exit 1
  else
    echo "Stopping unicorn..."
    kill -QUIT `cat $pid_file` && exit 0
    echo "FAILED!"
    exit 1
  fi
  ;;

# ----------------------------
#  Restart server. (??)
# ----------------------------

restart)
  if [ ! -s $pid_file ]; then
    echo "Unicorn not running."
    exit 1
  else
    echo "Restarting unicorn..."
    old_pid=`cat $pid_file`
    rm $pid_file
    kill -s USR2 $old_pid
    sleep 5
    # wait up to a minute for new unicorn to start
    for x in 1 2 3 4 5 6 7 8 9 10 11 12; do
      test -s $pid_file || sleep 5
    done
    if [ ! -s $pid_file ]; then
      echo "FAILED! Old pid was $old_pid."
      echo $old_pid > $pid_file
      exit 1
    else
      kill -9 $old_pid
      exit 0
    fi
  fi
  ;;

# ----------------------------
#  Reload workers.
# ----------------------------

reload)
  if [ ! -s $pid_file ]; then
    echo "Unicorn not running."
    exit 1
  else
    echo "Reloading unicorn workers..."
    kill -HUP `cat $pid_file` && exit 0
    echo "FAILED!"
    exit 1
  fi
  ;;

# ----------------------------
#  Show status of server.
# ----------------------------

status)
  if [ ! -s $pid_file ]; then
    echo "Unicorn not running."
    exit 1
  else
    pid=`cat $pid_file`
    echo "Unicorn running as $pid."
    exit 0
  fi
  ;;

*)
  echo "Usage: $0 {start|stop|restart|reload|status}"
  exit 1
  ;;

esac
