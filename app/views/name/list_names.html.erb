<%
  new_tab_set(:sort_by_header.t, @sorts)
  new_tab_set do
    add_tab(:name_index_bulk_edit.t, :action => 'bulk_name_edit')
    add_tab(:name_index_add_name.t, :action => 'create_name')
    add_tabs(@links)
  end

  flash_error(@error) if @error and (!@objects or @objects.empty?)
%>

<% if @suggest_alternate_spellings and @objects.empty?
  names = Name.suggest_alternate_spellings(@suggest_alternate_spellings) 
  if names.any? %>
    <div class="Warnings">
      <%= :list_observations_alternate_spellings.t %><br/>
      <ul type="none">
        <% for name in names.sort_by(&:sort_name) %>
          <%= link_to(name.display_name.t, :controller => :name,
                      :action => :show_name, :id => name.id) %><br/>
        <% end %>
      </ul>
    </div>
  <% end %>
<% end %>

<%= @help.tp if @help %>

<% # Let test_index test passing args to pagination_links.
args = @test_pagination_args || {} %>
<%= paginate_block(@pages, args) do %>
  <% if @objects != [] %>
    <% odd_or_even = 0 %>
    <% counts = Name.count_observations(@objects) %>
    <table cellpadding="5" cellspacing="0" width="100%">
      <% for name in @objects || []
        odd_or_even = 1 - odd_or_even %>
        <tr class="ListLine<%= odd_or_even %>">
          <td>
            <%= link_with_query(name.display_name.html_safe.t,
                  :action => 'show_name',
                  :id => name.id) + " [#{counts[name.id]}]" %></td>
          <% if @extra_data %>
            <% data = @extra_data[name.id]
            if data && !data.empty?
              for val in @extra_data[name.id] || [] %>
                <td><%= val %></td>
              <% end
            else %>
              <td align="center" colspan="3" style="letter-spacing:0.5em">
                --- not the default ---
              </td>
            <% end %>
          <% end %>
        </tr>
      <% end %>
    </table>
  <% end %>
<% end %>
