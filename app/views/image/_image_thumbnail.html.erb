<%
  # IMPORTANT: Sometimes it's prohibitive to do the extra join to images table,
  # so we only have image_id.  It's still possible to render the image with
  # nothing but the image_id.  (But not votes, original name, etc.)
  image, image_id = image.is_a?(Image) ? [image, image.id] : [nil, image]

  link     ||= {controller: :image, action: :show_image, id: image_id}
  size     ||= default_thumbnail_size
  votes    ||= image ? true : false
  original ||= false
  responsive ||= false

  vote_pct = ((image.vote_cache || 0) / Image.all_votes.length * 100).floor \
             if image and votes
  url = image ? image.url(size) : Image.url(size, image_id)
%>
<div style="text-align: center; position: relative;">
  <div style="<%= "display: inline-block;" unless responsive%>">
    <div>
      <div style="position: absolute; right: 0;">
    <a href="" class="glyphicon glyphicon-fullscreen theater-btn hidden-xs" data-toggle="theater" data-image="<%=Image.url(:huge, image_id) %>"></a>
      </div>
    <%= link_with_query(image_tag(url, class: responsive ? 'img-responsive center-block' : ''), link) %>
    </div>
    <% if vote_pct %>
      <div class="vote-meter">
        <div id="vote_meter_bar_<%=image_id%>" class="vote-meter-bar"
          role="progressbar" style="width: <%=vote_pct%>%"></div>
      </div>
    <% end %>
  </div>
  <% if User.current and votes and image %>
    <div class="image_vote_links_container">
      <%= render(partial: "image/image_vote_links", locals: {image: image}) %>
    </div>
  <% end %>
  <% if original && image and !image.original_name.blank? &&
        (check_permission(image) || image.user && image.user.keep_filenames == :keep_and_show) %>
    <span>
      <%= image.original_name %>
    </span>
  <%end%>
</div>
